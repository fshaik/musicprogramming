/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#ifndef PLUGINEDITOR_H_INCLUDED
#define PLUGINEDITOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"


//==============================================================================
/**
*/
class FilterAudioProcessorEditor : public AudioProcessorEditor,
	public SliderListener,
	public Timer
{
public:
    FilterAudioProcessorEditor (FilterAudioProcessor* ownerFilter);
    ~FilterAudioProcessorEditor();

    //==============================================================================
    // This is just a standard Juce paint method...
	void timerCallback() override;
	void paint(Graphics&) override;
	void resized() override;
	void sliderValueChanged(Slider*) override;

private:

	Label infoLabel, gainLabel, delayLabel;
	Slider gainSlider, delaySlider;
	ScopedPointer<ResizableCornerComponent> resizer;
	ComponentBoundsConstrainer resizeLimits;

	AudioPlayHead::CurrentPositionInfo lastDisplayedPosition;

	FilterAudioProcessor* getProcessor() const
	{
		return static_cast <FilterAudioProcessor*> (getAudioProcessor());
	}

	//void displayPositionInfo(const AudioPlayHead::CurrentPositionInfo& pos);
};


#endif  // PLUGINEDITOR_H_INCLUDED
